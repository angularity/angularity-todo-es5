/* globals escapeKeyDirective */

/**
 * <p>A directive that detects escape key on the given element and calls the specified attribute.</p>
 * @param {string} attribute The attribute that will be applied when the directive activates
 */
function escapeKeyDirective(attribute) {
  return {
    link: function link(scope, element, attributes) {
      var ESCAPE_KEY = 27;
      var action = attributes[attribute];
      if (action) {
        element.on('keydown', function (event) {
          if (event.keyCode === ESCAPE_KEY) {
            scope.$apply(action);
          }
        });
      }
    }
  }
}

/**
 * <p>Create a factory method that will produce an instance for the given <code>attribute</code> when called.</p>
 * @param {string} attribute The attribute that will be applied when the directive activates
 * @returns {Function} A factory method that creates a new instance when called
 */
escapeKeyDirective.forAttribute = function forAttribute(attribute) {
  return function () {
    return escapeKeyDirective(attribute);
  };
}

module.exports = escapeKeyDirective;